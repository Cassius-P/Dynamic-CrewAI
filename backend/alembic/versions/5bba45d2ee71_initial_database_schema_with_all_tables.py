"""Initial database schema with all tables

Revision ID: 5bba45d2ee71
Revises: 
Create Date: 2025-05-30 00:26:08.193933

"""
from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision = '5bba45d2ee71'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create pgvector extension
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_thresholds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('warning_threshold', sa.Float(), nullable=True),
    sa.Column('critical_threshold', sa.Float(), nullable=True),
    sa.Column('comparison_operator', sa.String(length=10), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alert_thresholds_id'), 'alert_thresholds', ['id'], unique=False)
    op.create_index(op.f('ix_alert_thresholds_metric_name'), 'alert_thresholds', ['metric_name'], unique=False)
    op.create_index(op.f('ix_alert_thresholds_metric_type'), 'alert_thresholds', ['metric_type'], unique=False)
    op.create_table('cache_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('cache_type', sa.String(length=50), nullable=False),
    sa.Column('operation', sa.String(length=20), nullable=False),
    sa.Column('key_pattern', sa.String(length=200), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('data_size_bytes', sa.Integer(), nullable=True),
    sa.Column('ttl_seconds', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cache_statistics_cache_type'), 'cache_statistics', ['cache_type'], unique=False)
    op.create_index(op.f('ix_cache_statistics_id'), 'cache_statistics', ['id'], unique=False)
    op.create_index(op.f('ix_cache_statistics_key_pattern'), 'cache_statistics', ['key_pattern'], unique=False)
    op.create_index(op.f('ix_cache_statistics_operation'), 'cache_statistics', ['operation'], unique=False)
    op.create_index(op.f('ix_cache_statistics_timestamp'), 'cache_statistics', ['timestamp'], unique=False)
    op.create_table('crews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('process', sa.String(length=50), nullable=True),
    sa.Column('verbose', sa.Boolean(), nullable=True),
    sa.Column('memory', sa.Boolean(), nullable=True),
    sa.Column('max_rpm', sa.Integer(), nullable=True),
    sa.Column('max_execution_time', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crews_id'), 'crews', ['id'], unique=False)
    op.create_index(op.f('ix_crews_name'), 'crews', ['name'], unique=False)
    op.create_table('dynamic_crew_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(length=100), nullable=True),
    sa.Column('template_config', sa.JSON(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dynamic_crew_templates_id'), 'dynamic_crew_templates', ['id'], unique=False)
    op.create_index(op.f('ix_dynamic_crew_templates_name'), 'dynamic_crew_templates', ['name'], unique=False)
    op.create_table('execution_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('execution_id', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('stage', sa.String(length=50), nullable=False),
    sa.Column('agent_id', sa.String(length=50), nullable=True),
    sa.Column('task_type', sa.String(length=50), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('memory_used_mb', sa.Float(), nullable=True),
    sa.Column('cpu_percent', sa.Float(), nullable=True),
    sa.Column('cache_hits', sa.Integer(), nullable=True),
    sa.Column('cache_misses', sa.Integer(), nullable=True),
    sa.Column('llm_calls', sa.Integer(), nullable=True),
    sa.Column('tool_calls', sa.Integer(), nullable=True),
    sa.Column('execution_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_execution_profiles_agent_id'), 'execution_profiles', ['agent_id'], unique=False)
    op.create_index(op.f('ix_execution_profiles_execution_id'), 'execution_profiles', ['execution_id'], unique=False)
    op.create_index(op.f('ix_execution_profiles_id'), 'execution_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_execution_profiles_timestamp'), 'execution_profiles', ['timestamp'], unique=False)
    op.create_table('llm_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('provider_type', sa.String(length=50), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('api_key', sa.String(length=512), nullable=True),
    sa.Column('api_base', sa.String(length=512), nullable=True),
    sa.Column('api_version', sa.String(length=50), nullable=True),
    sa.Column('temperature', sa.String(length=10), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_providers_id'), 'llm_providers', ['id'], unique=False)
    op.create_index(op.f('ix_llm_providers_name'), 'llm_providers', ['name'], unique=True)
    op.create_table('performance_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_metrics_id'), 'performance_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_performance_metrics_metric_name'), 'performance_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_performance_metrics_metric_type'), 'performance_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_performance_metrics_timestamp'), 'performance_metrics', ['timestamp'], unique=False)
    op.create_table('query_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('query_type', sa.String(length=50), nullable=False),
    sa.Column('table_name', sa.String(length=100), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=False),
    sa.Column('rows_affected', sa.Integer(), nullable=True),
    sa.Column('query_hash', sa.String(length=32), nullable=True),
    sa.Column('was_cached', sa.Boolean(), nullable=True),
    sa.Column('cache_hit', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_query_performance_id'), 'query_performance', ['id'], unique=False)
    op.create_index(op.f('ix_query_performance_query_hash'), 'query_performance', ['query_hash'], unique=False)
    op.create_index(op.f('ix_query_performance_query_type'), 'query_performance', ['query_type'], unique=False)
    op.create_index(op.f('ix_query_performance_table_name'), 'query_performance', ['table_name'], unique=False)
    op.create_index(op.f('ix_query_performance_timestamp'), 'query_performance', ['timestamp'], unique=False)
    op.create_table('resource_usage_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('cpu_percent', sa.Float(), nullable=False),
    sa.Column('memory_percent', sa.Float(), nullable=False),
    sa.Column('memory_used_mb', sa.Float(), nullable=False),
    sa.Column('memory_available_mb', sa.Float(), nullable=False),
    sa.Column('disk_usage_percent', sa.Float(), nullable=False),
    sa.Column('active_connections', sa.Integer(), nullable=True),
    sa.Column('queue_size', sa.Integer(), nullable=True),
    sa.Column('active_executions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resource_usage_metrics_id'), 'resource_usage_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_resource_usage_metrics_timestamp'), 'resource_usage_metrics', ['timestamp'], unique=False)
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=255), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.Column('backstory', sa.Text(), nullable=False),
    sa.Column('verbose', sa.Boolean(), nullable=True),
    sa.Column('allow_delegation', sa.Boolean(), nullable=True),
    sa.Column('max_iter', sa.Integer(), nullable=True),
    sa.Column('max_execution_time', sa.Integer(), nullable=True),
    sa.Column('tools', sa.JSON(), nullable=True),
    sa.Column('llm_config', sa.JSON(), nullable=True),
    sa.Column('manager_type', sa.String(length=50), nullable=True),
    sa.Column('can_generate_tasks', sa.Boolean(), nullable=True),
    sa.Column('manager_config', sa.JSON(), nullable=True),
    sa.Column('crew_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_id'), 'agents', ['id'], unique=False)
    op.create_table('entity_memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('crew_id', sa.Integer(), nullable=False),
    sa.Column('entity_name', sa.String(length=255), nullable=False),
    sa.Column('entity_type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('attributes', sa.Text(), nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('first_mentioned', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('mention_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='executionstatus'), nullable=True),
    sa.Column('inputs', sa.JSON(), nullable=True),
    sa.Column('outputs', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('execution_time', sa.Integer(), nullable=True),
    sa.Column('crew_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_executions_id'), 'executions', ['id'], unique=False)
    op.create_table('generation_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('objective', sa.Text(), nullable=False),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('generated_crew_id', sa.Integer(), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('llm_provider', sa.String(length=100), nullable=True),
    sa.Column('generation_status', sa.String(length=50), nullable=True),
    sa.Column('generation_result', sa.JSON(), nullable=True),
    sa.Column('validation_result', sa.JSON(), nullable=True),
    sa.Column('optimization_applied', sa.Boolean(), nullable=True),
    sa.Column('generation_time_seconds', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['generated_crew_id'], ['crews.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['dynamic_crew_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generation_requests_id'), 'generation_requests', ['id'], unique=False)
    op.create_table('memory_cleanup_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('crew_id', sa.Integer(), nullable=True),
    sa.Column('cleanup_type', sa.String(length=50), nullable=False),
    sa.Column('entries_removed', sa.Integer(), nullable=True),
    sa.Column('cleanup_reason', sa.String(length=200), nullable=True),
    sa.Column('execution_time_seconds', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_configurations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('crew_id', sa.Integer(), nullable=False),
    sa.Column('short_term_retention_hours', sa.Integer(), nullable=True),
    sa.Column('short_term_max_entries', sa.Integer(), nullable=True),
    sa.Column('long_term_consolidation_threshold', sa.Float(), nullable=True),
    sa.Column('long_term_max_entries', sa.Integer(), nullable=True),
    sa.Column('entity_confidence_threshold', sa.Float(), nullable=True),
    sa.Column('entity_similarity_threshold', sa.Float(), nullable=True),
    sa.Column('embedding_provider', sa.String(length=50), nullable=True),
    sa.Column('embedding_model', sa.String(length=100), nullable=True),
    sa.Column('cleanup_enabled', sa.Boolean(), nullable=True),
    sa.Column('cleanup_interval_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('crew_id')
    )
    op.create_table('agent_capabilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('capability_name', sa.String(length=255), nullable=False),
    sa.Column('capability_type', sa.String(length=100), nullable=True),
    sa.Column('proficiency_level', sa.Integer(), nullable=True),
    sa.Column('capability_description', sa.Text(), nullable=True),
    sa.Column('capability_metadata', sa.JSON(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_capabilities_id'), 'agent_capabilities', ['id'], unique=False)
    op.create_table('crew_optimizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('crew_id', sa.Integer(), nullable=True),
    sa.Column('generation_request_id', sa.Integer(), nullable=True),
    sa.Column('optimization_type', sa.String(length=100), nullable=True),
    sa.Column('original_config', sa.JSON(), nullable=True),
    sa.Column('optimized_config', sa.JSON(), nullable=True),
    sa.Column('optimization_score', sa.Float(), nullable=True),
    sa.Column('optimization_metrics', sa.JSON(), nullable=True),
    sa.Column('applied', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.ForeignKeyConstraint(['generation_request_id'], ['generation_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crew_optimizations_id'), 'crew_optimizations', ['id'], unique=False)
    op.create_table('entity_relationships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_entity_id', sa.UUID(), nullable=False),
    sa.Column('target_entity_id', sa.UUID(), nullable=False),
    sa.Column('relationship_type', sa.String(length=100), nullable=False),
    sa.Column('strength', sa.Float(), nullable=False),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_entity_id'], ['entity_memories.id'], ),
    sa.ForeignKeyConstraint(['target_entity_id'], ['entity_memories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('generation_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('generation_request_id', sa.Integer(), nullable=True),
    sa.Column('metric_name', sa.String(length=255), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=True),
    sa.Column('metric_unit', sa.String(length=50), nullable=True),
    sa.Column('metric_category', sa.String(length=100), nullable=True),
    sa.Column('metric_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['generation_request_id'], ['generation_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_generation_metrics_id'), 'generation_metrics', ['id'], unique=False)
    op.create_table('long_term_memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('crew_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True),
    sa.Column('importance_score', sa.Float(), nullable=False),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('source_execution_id', sa.Integer(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.ForeignKeyConstraint(['source_execution_id'], ['executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('short_term_memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('crew_id', sa.Integer(), nullable=False),
    sa.Column('execution_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True),
    sa.Column('meta_data', sa.Text(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['crew_id'], ['crews.id'], ),
    sa.ForeignKeyConstraint(['execution_id'], ['executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('generation_request_id', sa.Integer(), nullable=True),
    sa.Column('requirement_type', sa.String(length=100), nullable=True),
    sa.Column('requirement_name', sa.String(length=255), nullable=False),
    sa.Column('requirement_value', sa.String(length=500), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('requirement_metadata', sa.JSON(), nullable=True),
    sa.Column('satisfied', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['generation_request_id'], ['generation_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_requirements_id'), 'task_requirements', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_requirements_id'), table_name='task_requirements')
    op.drop_table('task_requirements')
    op.drop_table('short_term_memories')
    op.drop_table('long_term_memories')
    op.drop_index(op.f('ix_generation_metrics_id'), table_name='generation_metrics')
    op.drop_table('generation_metrics')
    op.drop_table('entity_relationships')
    op.drop_index(op.f('ix_crew_optimizations_id'), table_name='crew_optimizations')
    op.drop_table('crew_optimizations')
    op.drop_index(op.f('ix_agent_capabilities_id'), table_name='agent_capabilities')
    op.drop_table('agent_capabilities')
    op.drop_table('memory_configurations')
    op.drop_table('memory_cleanup_logs')
    op.drop_index(op.f('ix_generation_requests_id'), table_name='generation_requests')
    op.drop_table('generation_requests')
    op.drop_index(op.f('ix_executions_id'), table_name='executions')
    op.drop_table('executions')
    op.drop_table('entity_memories')
    op.drop_index(op.f('ix_agents_id'), table_name='agents')
    op.drop_table('agents')
    op.drop_index(op.f('ix_resource_usage_metrics_timestamp'), table_name='resource_usage_metrics')
    op.drop_index(op.f('ix_resource_usage_metrics_id'), table_name='resource_usage_metrics')
    op.drop_table('resource_usage_metrics')
    op.drop_index(op.f('ix_query_performance_timestamp'), table_name='query_performance')
    op.drop_index(op.f('ix_query_performance_table_name'), table_name='query_performance')
    op.drop_index(op.f('ix_query_performance_query_type'), table_name='query_performance')
    op.drop_index(op.f('ix_query_performance_query_hash'), table_name='query_performance')
    op.drop_index(op.f('ix_query_performance_id'), table_name='query_performance')
    op.drop_table('query_performance')
    op.drop_index(op.f('ix_performance_metrics_timestamp'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_metric_type'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_metric_name'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_id'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_llm_providers_name'), table_name='llm_providers')
    op.drop_index(op.f('ix_llm_providers_id'), table_name='llm_providers')
    op.drop_table('llm_providers')
    op.drop_index(op.f('ix_execution_profiles_timestamp'), table_name='execution_profiles')
    op.drop_index(op.f('ix_execution_profiles_id'), table_name='execution_profiles')
    op.drop_index(op.f('ix_execution_profiles_execution_id'), table_name='execution_profiles')
    op.drop_index(op.f('ix_execution_profiles_agent_id'), table_name='execution_profiles')
    op.drop_table('execution_profiles')
    op.drop_index(op.f('ix_dynamic_crew_templates_name'), table_name='dynamic_crew_templates')
    op.drop_index(op.f('ix_dynamic_crew_templates_id'), table_name='dynamic_crew_templates')
    op.drop_table('dynamic_crew_templates')
    op.drop_index(op.f('ix_crews_name'), table_name='crews')
    op.drop_index(op.f('ix_crews_id'), table_name='crews')
    op.drop_table('crews')
    op.drop_index(op.f('ix_cache_statistics_timestamp'), table_name='cache_statistics')
    op.drop_index(op.f('ix_cache_statistics_operation'), table_name='cache_statistics')
    op.drop_index(op.f('ix_cache_statistics_key_pattern'), table_name='cache_statistics')
    op.drop_index(op.f('ix_cache_statistics_id'), table_name='cache_statistics')
    op.drop_index(op.f('ix_cache_statistics_cache_type'), table_name='cache_statistics')
    op.drop_table('cache_statistics')
    op.drop_index(op.f('ix_alert_thresholds_metric_type'), table_name='alert_thresholds')
    op.drop_index(op.f('ix_alert_thresholds_metric_name'), table_name='alert_thresholds')
    op.drop_index(op.f('ix_alert_thresholds_id'), table_name='alert_thresholds')
    op.drop_table('alert_thresholds')
    # ### end Alembic commands ### 