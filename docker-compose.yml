version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: crewai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crewai-celery-worker
    command: celery -A app.queue.task_queue worker --loglevel=info --concurrency=4 --queues=crew_execution,retry,default
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crewai-celery-beat
    command: celery -A app.queue.task_queue beat --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crewai-flower
    command: celery -A app.queue.task_queue flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crewai-app
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  redis_data:

networks:
  default:
    name: crewai-network 